version: 2.0
jobs:
  test:
    docker:
      - image: circleci/openjdk:stretch
    environment:
      POSTGRES_USER: DB_USERNAME
      POSTGRES_PASSWORD: DB_PASSWORD
      POSTGRES_DB: DB_HOST

    steps:

      - checkout

      - run:
           command: |
              RUN echo "deb [signed-by=/usr/share/keyrings/cloud.google.gpg] http://packages.cloud.google.com/apt cloud-sdk main" | tee -a /etc/apt/sources.list.d/google-cloud-sdk.list && curl https://packages.cloud.google.com/apt/doc/apt-key.gpg | apt-key --keyring /usr/share/keyrings/cloud.google.gpg  add - && apt-get update -y && apt-get install google-cloud-sdk -y
              echo ${GOOGLE_AUTH} > ${HOME}/gcp-key.json
              gcloud auth activate-service-account --key-file ${HOME}/gcp-key.json
              gcloud --quiet config set project ${GCP_PROJECT}
              rm ${HOME}/gcp-key.json
              ./mvnw test


workflows:
  version: 2
  build:
    jobs:
      - test
#orbs:
#  maven: circleci/maven@0.0.12
#    jobs:
#
#     build_project:
#        #machine setup and credential
#       name: Set Credentials
#         command: |
#           echo ${GOOGLE_AUTH} > ${HOME}/gcp-key.json
#           gcloud auth activate-service-account --key-file ${HOME}/gcp-key.json
#           gcloud --quiet config set project ${GCP_PROJECT}
#        # sh ~/project/packages/<< parameters.package_name >>/deployDAG.sh << parameters.env_name >>
#           rm ${HOME}/gcp-key.json
#
#          environment:
#            POSTGRES_USER: DB_USERNAME
#            POSTGRES_PASSWORD: DB_PASSWORD
#            POSTGRES_DB: DB_HOST
#
#     run_test:
#       - maven/test # checkout, build, test, and upload test results
#
#
## config for DB username pwd
