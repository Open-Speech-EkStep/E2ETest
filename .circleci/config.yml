version: 2
jobs:
  build:
    
    working_directory: ~/E2E

    docker:
      - image: circleci/openjdk:8-jdk-stretch
        environment:
          POSTGRES_USER: $POSTGRES_USER
          POSTGRES_DB: $POSTGRES_DB
          POSTGRES_PASSWORD: $POSTGRES_PASSWORD

    steps:
      - run :
          name: Setup Google Auth

      - run :
          name: Setup proxy for psql
          command: |
            cd ${HOME}
             wget https://dl.google.com/dl/cloudsdk/channels/rapid/downloads/google-cloud-sdk-265.0.0-linux-x86_64.tar.gz
             tar -zxf google-cloud-sdk-*
                     cd google-cloud-sdk
                     pwd
                     ./install.sh --quiet
                     echo ${GOOGLE_AUTH} > ${HOME}/gcp-key.json
                     ./bin/gcloud auth activate-service-account --key-file ${HOME}/gcp-key.json
                     ./bin/gcloud --quiet config set project ${GCP_PROJECT}
                     export GOOGLE_APPLICATION_CREDENTIALS=${HOME}/gcp-key.json
                     echo $GOOGLE_APPLICATION_CREDENTIALS
            sudo apt-get update
            sudo apt-get install postgresql-client
            sudo apt-get install telnet
            wget https://dl.google.com/cloudsql/cloud_sql_proxy.linux.amd64 -O cloud_sql_proxy
            chmod +x cloud_sql_proxy
   

            nohup ./cloud_sql_proxy -dir=./cloudsql -instances=ekstepspeechrecognition:us-central1:crowdsourcedb=tcp:5432 &

            sleep 60s
            cat nohup.out
            ifconfig
            ping 127.0.0.1
            ping localhost
            telnet 127.0.0.1 5432


      - checkout:
         
      - restore_cache:
          key: E2E-{{ checksum "pom.xml" }}

      - run: mvn dependency:go-offline

      - save_cache:
          paths:
            - ~/.m2
          key: E2E-{{ checksum "pom.xml" }}

      - run: mvn package

      - store_test_results:
          path: target/surefire-reports

#      - store_artifacts:
#          path: target/demo-java-spring-0.0.1-SNAPSHOT.jar
